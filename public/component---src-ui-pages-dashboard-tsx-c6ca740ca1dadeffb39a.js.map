{"version":3,"sources":["webpack:///./src/ui/layouts/PageLayout/PageLayout.style.ts","webpack:///./src/ui/layouts/PageLayout/PageLayout.component.tsx","webpack:///./src/ui/atoms/Spinner/LoadingSpinner.style.ts","webpack:///./src/ui/atoms/Spinner/LoadingSpinner.component.tsx","webpack:///./src/ui/pages/Dashboard.tsx"],"names":["PageLayout","styled","width","minWidth","height","minHeight","display","flexDirection","alignItems","justifyContent","paddingTop","theme","HEADER_HEIGHT","background","DIRTY_BACKGROUND","Main","P","position","maxWidth","LARGE_VIEW","flex","paddingRight","paddingLeft","style","children","page","crawl","useLayout","loading","useSelector","s","ui","SEO","Header","Spinner","margin","viewBox","animation","SPINNER_RADIUS","transform","strokeDasharray","strokeDashoffset","Circle","stroke","PRIMARY_COLOR","strokeLinecap","cx","cy","r","fill","strokeWidth","LoadingSpinner","BuildCommunity","postalRef","useRef","buildCommunities","a","batch","db","Object","entries","postalCodes","filter","entry","substr","map","code","name","communityRef","doc","postsRef","collection","membersRef","welcomeMsgRef","teamHabichatRef","set","displayName","active","messageRef","userRef","commit","console","log","border","BRAND_COLOR","padding","size","text","bold","unique","ref","type","onClick","Dashboard"],"mappings":"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","file":"component---src-ui-pages-dashboard-tsx-c6ca740ca1dadeffb39a.js","sourcesContent":["import styled from 'styled-components'\nimport theme from 'ui/assets/theme'\n\nexport const PageLayout = styled('div')({\n  width: `100vw`,\n  minWidth: 300,\n  height: `100%`,\n  minHeight: `100vh`,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  paddingTop: theme.HEADER_HEIGHT,\n  background: theme.DIRTY_BACKGROUND\n})\n\nexport const Main = styled('main')(P => ({\n  position: 'relative',\n  width: `100%`,\n  maxWidth: theme.LARGE_VIEW,\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  justifyContent: 'flex-start',\n  paddingRight: 15,\n  paddingLeft: 15,\n  ...P.style\n}))\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport GlobalStyle from 'ui/assets/theme/global.style'\nimport SEO from 'ui/atoms/SEO'\nimport Spinner from 'ui/atoms/Spinner'\nimport { Header } from 'ui/components/Header'\nimport { WebFooter } from 'ui/components/Footer'\nimport useLayout from 'ui/hooks/useLayout'\nimport * as S from './PageLayout.style'\n\nconst PageLayout = ({ children, page, crawl, style = {} }) => {\n  useLayout()\n  const { loading } = useSelector(s => s.ui)\n\n  return (\n    <S.PageLayout>\n      <GlobalStyle />\n      <SEO page={page} crawl={crawl} />\n      {!loading && <Header />}\n      {loading ? <Spinner /> : <S.Main style={style}>{children}</S.Main>}\n      {!loading && <WebFooter />}\n    </S.PageLayout>\n  )\n}\n\nexport default PageLayout\n","import styled from 'styled-components'\nimport theme from 'ui/assets/theme'\n\nexport const Spinner = styled('svg')({\n  margin: 'auto',\n  viewBox: '0 0 50 50',\n  animation: `rotate 1s linear infinite`,\n  width: theme.SPINNER_RADIUS,\n  height: theme.SPINNER_RADIUS,\n  '@keyframes rotate': {\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  },\n  '@keyframes dash': {\n    '0%': {\n      strokeDasharray: `90, 150`,\n      strokeDashoffset: -35\n    },\n    '50%': {\n      strokeDasharray: `90, 150`,\n      strokeDashoffset: -35\n    },\n    '100%': {\n      strokeDasharray: `90, 150`,\n      strokeDashoffset: -35\n    }\n  }\n})\n\nexport const Circle = styled('circle')({\n  stroke: theme.PRIMARY_COLOR,\n  strokeLinecap: `round`,\n  animation: `dash 1.5s ease-in-out infinite`,\n  cx: 25,\n  cy: 25,\n  r: 20,\n  fill: 'none',\n  strokeWidth: 4\n})\n","import React from 'react'\nimport * as S from './LoadingSpinner.style'\n\nconst LoadingSpinner = () => {\n  return (\n    <S.Spinner>\n      <S.Circle />\n    </S.Spinner>\n  )\n}\n\nexport default LoadingSpinner\n","import React, { useRef } from 'react'\nimport postalCodes from 'config/postal-codes.json'\nimport { db } from 'services/firebase'\nimport theme from 'ui/assets/theme'\nimport Text from 'ui/atoms/Text'\nimport PageLayout from 'ui/layouts/PageLayout'\n\n/**\n * Build community based on letter\n * to ensure that firebase 500 writes limit works.\n */\nconst BuildCommunity = () => {\n  const postalRef = useRef(null)\n\n  const buildCommunities = async () => {\n    const batch = db().batch()\n    const letterEntries = Object.entries(postalCodes).filter(entry => entry[0].substr(0, 1) === 'Z')\n    letterEntries.map(([code, name]) => {\n      const communityRef = db().doc(`communities/${code}`)\n      const postsRef = db().collection(`communities/${code}/posts`).doc()\n      const membersRef = db().collection(`communities/${code}/members`).doc()\n      const welcomeMsgRef = db().doc(`messages/1u3gOpZ1Yx4WgEtO6QNZ`)\n      const teamHabichatRef = db().doc(`users/1ER6WmvGCGwo9m97cHyZ`)\n      batch.set(communityRef, { displayName: name })\n      batch.set(postsRef, { active: true, messageRef: welcomeMsgRef })\n      batch.set(membersRef, { active: true, userRef: teamHabichatRef })\n    })\n    await batch.commit()\n    return console.log('batch complete!')\n  }\n\n  return (\n    <div style={{ border: `1px solid ${theme.BRAND_COLOR}`, padding: 10, margin: `5px 0`, flexDirection: 'column' }}>\n      <Text size=\"L\" text=\"build communities\" bold unique />\n      <input ref={postalRef} />\n      <button type=\"button\" onClick={buildCommunities} style={{ background: theme.BRAND_COLOR }}>\n        Submit\n      </button>\n    </div>\n  )\n}\n\nconst Dashboard = () => {\n  return (\n    <PageLayout page=\"dashboard\" crawl={false}>\n      <BuildCommunity />\n    </PageLayout>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}