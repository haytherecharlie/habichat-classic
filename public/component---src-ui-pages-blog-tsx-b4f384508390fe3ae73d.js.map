{"version":3,"sources":["webpack:///./src/ui/components/BlogPost/BlogPost.style.ts","webpack:///./src/ui/components/BlogPost/BlogPost.component.tsx","webpack:///./src/ui/hooks/useBlogEntries.ts","webpack:///./src/ui/pages/Blog.tsx","webpack:///./src/ui/atoms/Title/Title.style.ts","webpack:///./src/ui/atoms/Title/Title.component.tsx"],"names":["Article","styled","boxSizing","padding","display","flexDirection","alignItems","justifyContent","maxWidth","theme","LARGE_VIEW","marginTop","fontSize","FONT_XS","color","PRIMARY_COLOR","Body","lineHeight","textAlign","FONT_S","BlogPost","frontmatter","html","key","slug","Title","size","text","title","style","bold","unique","author","date","dangerouslySetInnerHTML","__html","useBlogEntries","Blog","data","PageLayout","page","crawl","allMarkdownRemark","edges","map","id","node","H1","P","verticalAlign","FONT_XL","fontWeight","fontFamily","letterSpacing","margin","H2","FONT_L","H3","FONT_M","H4","H5","link","paddingTop","formatMessage"],"mappings":"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","file":"component---src-ui-pages-blog-tsx-b4f384508390fe3ae73d.js","sourcesContent":["import styled from 'styled-components'\nimport theme from 'ui/assets/theme'\n\nexport const Article = styled('article')({\n  boxSizing: 'border-box',\n  padding: `2rem 0 1rem 0`,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  justifyContent: 'flex-start',\n  maxWidth: theme.LARGE_VIEW,\n  '& > p': {\n    marginTop: 5,\n    fontSize: theme.FONT_XS,\n    color: theme.PRIMARY_COLOR\n  }\n})\n\nexport const Body = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  lineHeight: `1.5rem`,\n  color: `#fff`,\n  '& > p': {\n    textAlign: 'left',\n    fontSize: theme.FONT_S,\n    color: theme.PRIMARY_COLOR,\n    '& > a': {\n      color: theme.PRIMARY_COLOR\n    }\n  }\n})\n","import React from 'react'\nimport Text from 'ui/atoms/Text'\nimport Title from 'ui/atoms/Title'\nimport * as S from './BlogPost.style'\n\nconst BlogPost = ({ frontmatter, html }) => {\n  return (\n    <S.Article key={frontmatter.slug}>\n      <Title size=\"h2\" text={frontmatter.title} style={{}} bold unique />\n      <Title size=\"h4\" text={frontmatter.author} unique />\n      <Title size=\"h4\" text={frontmatter.date} bold unique />\n      <S.Body dangerouslySetInnerHTML={{ __html: html }} />\n    </S.Article>\n  )\n}\n\nexport default BlogPost\n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useBlogEntries = () => {\n  return useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            html\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              lang\n              slug\n              title\n              author\n            }\n          }\n        }\n      }\n    }\n  `)\n}\n\nexport default useBlogEntries\n","import React from 'react'\nimport BlogPost from 'ui/components/BlogPost'\nimport useBlogEntries from 'ui/hooks/useBlogEntries'\nimport PageLayout from 'ui/layouts/PageLayout'\n\nconst Blog = () => {\n  const data = useBlogEntries()\n  return (\n    <PageLayout page=\"blog\" crawl={true}>\n      {data.allMarkdownRemark.edges.map(({ node }, id) => <BlogPost key={id} frontmatter={node.frontmatter} html={node.html} />)}\n    </PageLayout>\n  )\n}\n\nexport default Blog\n","import styled from 'styled-components'\nimport theme from 'ui/assets/theme'\n\nexport const Title = styled('div')(style => ({\n  ...style\n}))\n\nexport const H1 = styled('h1')(P => ({\n  verticalAlign: 'bottom',\n  maxWidth: `100%`,\n  lineHeight: theme.FONT_XL + 5 + 'px',\n  fontSize: theme.FONT_XL + 'px',\n  fontWeight: 500,\n  fontFamily: P.bold ? 'cocogoose' : 'helvetica',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...P.style\n}))\n\nexport const H2 = styled('h2')(P => ({\n  verticalAlign: 'bottom',\n  maxWidth: `100%`,\n  lineHeight: theme.FONT_L + 4 + 'px',\n  fontSize: theme.FONT_L,\n  fontWeight: 500,\n  fontFamily: P.bold ? 'cocogoose' : 'helvetica',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...P.style\n}))\n\nexport const H3 = styled('h3')(P => ({\n  verticalAlign: 'bottom',\n  maxWidth: `100%`,\n  lineHeight: theme.FONT_M + 4 + 'px',\n  fontSize: theme.FONT_M,\n  fontWeight: 500,\n  fontFamily: P.bold ? 'cocogoose' : 'helvetica',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...P.style\n}))\n\nexport const H4 = styled('h4')(P => ({\n  verticalAlign: 'bottom',\n  maxWidth: `100%`,\n  lineHeight: theme.FONT_S + 3 + 'px',\n  fontSize: theme.FONT_S,\n  fontWeight: 500,\n  fontFamily: P.bold ? 'cocogoose' : 'helvetica',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...P.style\n}))\n\nexport const H5 = styled('h5')(P => ({\n  verticalAlign: 'bottom',\n  maxWidth: `100%`,\n  lineHeight: theme.FONT_XS + 2 + 'px',\n  fontSize: theme.FONT_XS,\n  fontWeight: 500,\n  fontFamily: P.bold ? 'cocogoose' : 'helvetica',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...P.style\n}))\n","import React from 'react'\nimport { formatMessage } from 'ui/language/translations'\nimport * as S from './Title.style'\n\nconst Title = ({ size = 'h1', bold = false, text = 'placeholder', style = {}, unique = false, link = false }) => {\n  if (size === 'h1') {\n    return (\n      <S.Title style={{ paddingTop: 5 }}>\n        <S.H1 bold={bold} style={style} link={link}>\n          {unique ? text : formatMessage(text)}\n        </S.H1>\n      </S.Title>\n    )\n  }\n\n  if (size === 'h2') {\n    return (\n      <S.Title style={{ paddingTop: 3 }}>\n        <S.H2 bold={bold} style={style} link={link}>\n          {unique ? text : formatMessage(text)}\n        </S.H2>\n      </S.Title>\n    )\n  }\n\n  if (size === 'h3') {\n    return (\n      <S.Title style={{ paddingTop: 2 }}>\n        <S.H3 bold={bold} style={style} link={link}>\n          {unique ? text : formatMessage(text)}\n        </S.H3>\n      </S.Title>\n    )\n  }\n\n  if (size === 'h4') {\n    return (\n      <S.Title style={{ paddingTop: 2 }}>\n        <S.H4 bold={bold} style={style} link={link}>\n          {unique ? text : formatMessage(text)}\n        </S.H4>\n      </S.Title>\n    )\n  }\n\n  if (size === 'h5') {\n    return (\n      <S.Title style={{ paddingTop: 2 }}>\n        <S.H5 bold={bold} style={style} link={link}>\n          {unique ? text : formatMessage(text)}\n        </S.H5>\n      </S.Title>\n    )\n  }\n}\n\nexport default Title\n"],"sourceRoot":""}