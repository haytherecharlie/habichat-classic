{"version":3,"sources":["webpack:///./src/ui/pages/404.tsx","webpack:///./src/ui/layouts/PageLayout/PageLayout.style.ts","webpack:///./src/ui/layouts/PageLayout/PageLayout.component.tsx","webpack:///./src/ui/atoms/Spinner/LoadingSpinner.style.ts","webpack:///./src/ui/atoms/Spinner/LoadingSpinner.component.tsx"],"names":["_404","page","crawl","style","alignItems","justifyContent","src","width","maxWidth","margin","alt","size","text","textAlign","marginTop","bold","unique","href","PageLayout","styled","minWidth","height","minHeight","display","flexDirection","paddingTop","theme","HEADER_HEIGHT","background","DIRTY_BACKGROUND","Main","P","position","LARGE_VIEW","flex","paddingRight","paddingLeft","children","useLayout","loading","useSelector","s","ui","SEO","Header","Spinner","viewBox","animation","SPINNER_RADIUS","transform","strokeDasharray","strokeDashoffset","Circle","stroke","PRIMARY_COLOR","strokeLinecap","cx","cy","r","fill","strokeWidth","LoadingSpinner"],"mappings":"6FAAA,oEAwBeA,UAlBF,WACX,OACE,kBAAC,IAAD,CAAYC,KAAK,MAAMC,OAAO,EAAOC,MAAO,CAAEC,WAAY,SAAUC,eAAgB,WAClF,yBAAKC,IAAI,wBAAwBH,MAAO,CAAEI,MAAO,MAAOC,SAAU,IAAKC,OAAQ,UAAYC,IAAI,eAC/F,kBAAC,IAAD,CAAMC,KAAK,IAAIC,KAAK,gCAAgCT,MAAO,CAAEU,UAAW,SAAUC,UAAW,IAAMC,MAAI,EAACC,QAAM,IAC9G,kBAAC,IAAD,CAAML,KAAK,IAAIC,KAAK,kBAAkBT,MAAO,CAAEU,UAAW,UAAYE,MAAI,EAACC,QAAM,IACjF,kBAAC,IAAD,CAAMC,KAAK,KACT,kBAAC,IAAD,CACEN,KAAK,IACLC,KAAK,qBACLT,MAAO,CAAEW,UAAW,GAAID,UAAW,UACnCG,QAAM,Q,qNCdHE,EAAaC,YAAO,OAAV,kFAAGA,CAAc,CACtCZ,MAAO,QACPa,SAAU,IACVC,OAAQ,OACRC,UAAW,QACXC,QAAS,OACTC,cAAe,SACfpB,WAAY,SACZC,eAAgB,aAChBoB,WAAYC,IAAMC,cAClBC,WAAYF,IAAMG,mBAGPC,EAAOX,YAAO,QAAV,4EAAGA,EAAe,SAAAY,GAAC,sBAClCC,SAAU,WACVzB,MAAO,OACPC,SAAUkB,IAAMO,WAChBC,KAAM,EACNX,QAAS,OACTC,cAAe,SACfpB,WAAY,UACZC,eAAgB,aAChB8B,aAAc,GACdC,YAAa,IACVL,EAAE5B,UCFQe,EAfI,SAAC,GAA0C,IAAxCmB,EAAwC,EAAxCA,SAAUpC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAwB,IAAjBC,aAAiB,MAAT,GAAS,EAC5DmC,cAD4D,IAEpDC,EAAYC,aAAY,SAAAC,GAAC,OAAIA,EAAEC,MAA/BH,QAER,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,MACA,kBAACI,EAAA,EAAD,CAAK1C,KAAMA,EAAMC,MAAOA,KACtBqC,GAAW,kBAACK,EAAA,EAAD,MACZL,EAAU,kBAACM,EAAA,EAAD,MAAc,kBAAC,EAAD,CAAQ1C,MAAOA,GAAQkC,IAC9CE,GAAW,kBAAC,IAAD,S,qHCjBNM,EAAU1B,YAAO,OAAV,mFAAGA,CAAc,CACnCV,OAAQ,OACRqC,QAAS,YACTC,UAAW,4BACXxC,MAAOmB,IAAMsB,eACb3B,OAAQK,IAAMsB,eACd,oBAAqB,CACnB,OAAQ,CACNC,UAAW,mBAGf,kBAAmB,CACjB,KAAM,CACJC,gBAAiB,UACjBC,kBAAmB,IAErB,MAAO,CACLD,gBAAiB,UACjBC,kBAAmB,IAErB,OAAQ,CACND,gBAAiB,UACjBC,kBAAmB,OAKZC,EAASjC,YAAO,UAAV,kFAAGA,CAAiB,CACrCkC,OAAQ3B,IAAM4B,cACdC,cAAe,QACfR,UAAW,iCACXS,GAAI,GACJC,GAAI,GACJC,EAAG,GACHC,KAAM,OACNC,YAAa,IC3BAC,EARQ,WACrB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD","file":"component---src-ui-pages-404-tsx-5ef1bb09913b1dc9eff5.js","sourcesContent":["import React from 'react'\nimport theme from 'ui/assets/theme'\nimport Link from 'ui/atoms/Link'\nimport Text from 'ui/atoms/Text'\nimport PageLayout from 'ui/layouts/PageLayout'\n\nconst _404 = () => {\n  return (\n    <PageLayout page=\"404\" crawl={false} style={{ alignItems: 'center', justifyContent: 'center' }}>\n      <img src=\"/image/spilt-milk.png\" style={{ width: `80%`, maxWidth: 400, margin: '0 auto' }} alt=\"spilt milk\" />\n      <Text size=\"M\" text=\"Oops! We all make mistakes...\" style={{ textAlign: 'center', marginTop: 10 }} bold unique />\n      <Text size=\"M\" text=\"Page not found!\" style={{ textAlign: 'center' }} bold unique />\n      <Link href=\"/\">\n        <Text\n          size=\"S\"\n          text=\"Return to homepage\"\n          style={{ marginTop: 10, textAlign: 'center' }}\n          unique\n        />\n      </Link>\n    </PageLayout>\n  )\n}\n\nexport default _404\n","import styled from 'styled-components'\nimport theme from 'ui/assets/theme'\n\nexport const PageLayout = styled('div')({\n  width: `100vw`,\n  minWidth: 300,\n  height: `100%`,\n  minHeight: `100vh`,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  paddingTop: theme.HEADER_HEIGHT,\n  background: theme.DIRTY_BACKGROUND\n})\n\nexport const Main = styled('main')(P => ({\n  position: 'relative',\n  width: `100%`,\n  maxWidth: theme.LARGE_VIEW,\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  justifyContent: 'flex-start',\n  paddingRight: 15,\n  paddingLeft: 15,\n  ...P.style\n}))\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport GlobalStyle from 'ui/assets/theme/global.style'\nimport SEO from 'ui/atoms/SEO'\nimport Spinner from 'ui/atoms/Spinner'\nimport { Header } from 'ui/components/Header'\nimport { WebFooter } from 'ui/components/Footer'\nimport useLayout from 'ui/hooks/useLayout'\nimport * as S from './PageLayout.style'\n\nconst PageLayout = ({ children, page, crawl, style = {} }) => {\n  useLayout()\n  const { loading } = useSelector(s => s.ui)\n\n  return (\n    <S.PageLayout>\n      <GlobalStyle />\n      <SEO page={page} crawl={crawl} />\n      {!loading && <Header />}\n      {loading ? <Spinner /> : <S.Main style={style}>{children}</S.Main>}\n      {!loading && <WebFooter />}\n    </S.PageLayout>\n  )\n}\n\nexport default PageLayout\n","import styled from 'styled-components'\nimport theme from 'ui/assets/theme'\n\nexport const Spinner = styled('svg')({\n  margin: 'auto',\n  viewBox: '0 0 50 50',\n  animation: `rotate 1s linear infinite`,\n  width: theme.SPINNER_RADIUS,\n  height: theme.SPINNER_RADIUS,\n  '@keyframes rotate': {\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  },\n  '@keyframes dash': {\n    '0%': {\n      strokeDasharray: `90, 150`,\n      strokeDashoffset: -35\n    },\n    '50%': {\n      strokeDasharray: `90, 150`,\n      strokeDashoffset: -35\n    },\n    '100%': {\n      strokeDasharray: `90, 150`,\n      strokeDashoffset: -35\n    }\n  }\n})\n\nexport const Circle = styled('circle')({\n  stroke: theme.PRIMARY_COLOR,\n  strokeLinecap: `round`,\n  animation: `dash 1.5s ease-in-out infinite`,\n  cx: 25,\n  cy: 25,\n  r: 20,\n  fill: 'none',\n  strokeWidth: 4\n})\n","import React from 'react'\nimport * as S from './LoadingSpinner.style'\n\nconst LoadingSpinner = () => {\n  return (\n    <S.Spinner>\n      <S.Circle />\n    </S.Spinner>\n  )\n}\n\nexport default LoadingSpinner\n"],"sourceRoot":""}